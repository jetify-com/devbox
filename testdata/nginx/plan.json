{
  "install_stage": {
    "input_files": [
      "."
    ]
  },
  "start_stage": {
    "command": "addgroup --system --gid 101 nginx && \\\n\tadduser --system --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx && \\\n\tmkdir -p /var/cache/nginx/client_body && \\\n\tmkdir -p /var/log/nginx/ && \\\n\tPKG_PATH=$(readlink -f $(which nginx) | sed -r \"s/\\/bin\\/nginx//g\") && \\\n\tln -s /app/nginx.conf $PKG_PATH/conf/devbox-nginx.conf && \\\n\techo Starting nginx with command \\\"nginx -c conf/devbox-nginx.conf -g 'daemon off;'\\\" && \\\n\tnginx -c conf/devbox-nginx.conf -g 'daemon off;'",
    "input_files": [
      "."
    ]
  },
  "dev_packages": [
    "shell-nginx",
    "nginx"
  ],
  "runtime_packages": [
    "nginx"
  ],
  "definitions": [
    "\nshell-nginx = pkgs.writeShellScriptBin \"shell-nginx\" ''\n\necho \"Starting nginx with command:\"\necho \"nginx -p testdata/nginx -c shell-nginx.conf -e /tmp/error.log -g \\\"pid /tmp/mynginx.pid;daemon off;\\\"\"\nnginx -p testdata/nginx -c shell-nginx.conf -e /tmp/error.log -g \"pid /tmp/shell-nginx.pid;daemon off;\"\n'';"
  ],
  "shell_init_hook": "echo \"\n##### WARNING: nginx planner is experimental #####\n\nYou may need to add\n\n\\\"include ./.devbox/gen/shell-helper-nginx.conf;\\\"\n\nto your shell-nginx.conf file to ensure the server can start in the nix shell.\n\nUse \\\"shell-nginx\\\" to start the server\n\";",
  "generated_files": {
    "shell-helper-nginx.conf": "access_log /tmp/access.log;\nclient_body_temp_path /tmp/client_body;\nproxy_temp_path /tmp/proxy;\nfastcgi_temp_path /tmp/fastcgi;\nuwsgi_temp_path /tmp/uwsgi;\nscgi_temp_path /tmp/scgi;\n"
  }
}
