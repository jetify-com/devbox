{
    description = "A devbox shell";

    inputs = {
        # master branch can be slow because not all binaries are built and populated in the cache.
        # using the nixpkgs-unstable tag ensures everything has been built and populated in the cache.
        # https://www.reddit.com/r/NixOS/comments/ydr4po/comment/itv6oqo/?utm_source=reddit&utm_medium=web2x&context=3
        nixpkgs.url = "github:NixOS/nixpkgs/nixpkgs-unstable";

        flake-utils.url = "github:numtide/flake-utils";
    };

    outputs = { self, nixpkgs, flake-utils }:
        flake-utils.lib.eachDefaultSystem (system:
        let pkgs = nixpkgs.legacyPackages.${system};

        in {
            defaultPackage = pkgs.buildEnv {
                name="devbox-shell-env";
                paths = [
                  {{- range .DevPackages}}
                    pkgs.{{.}}
                  {{end -}}
                ];
            };
            devShell = pkgs.mkShell {
              shellHook =
                ''
                  echo "Starting a devbox shell..."

                  # We're technically no longer in a Nix shell after this hook because we
                  # exec a devbox shell.
                  export IN_NIX_SHELL=0
                  export DEVBOX_SHELL_ENABLED=1

                  # Undo the effects of `nix-shell --pure` on SSL certs.
                  # See https://github.com/NixOS/nixpkgs/blob/dae204faa0243b4d0c0234a5f5f83a2549ecb5b7/pkgs/stdenv/generic/setup.sh#L677-L685
                  if [ "$NIX_SSL_CERT_FILE" == "/no-cert-file.crt" ]; then
                     unset NIX_SSL_CERT_FILE
                  fi
                  if [ "$SSL_CERT_FILE" == "/no-cert-file.crt" ]; then
                     unset SSL_CERT_FILE
                  fi

                  # Append the parent shell's PATH so that we retain access to
                  # non-Nix programs, while still preferring the Nix ones.
                  export "PATH=$PATH:$PARENT_PATH"

                  {{ if debug }}
                  echo "pwd is: $(pwd)"
                  echo "PARENT_PATH=$PARENT_PATH"
                  echo "PATH=$PATH"
                  {{- end }}

                  # exec env "SHELL=/bin/zsh" "ZDOTDIR=/var/folders/zv/r3sx92_94gq86_rq3yn1ky2h0000gn/T/devbox3840985630" /bin/zsh
                '';

              # We do not need to install these because we do `nix profile install`
              # using the defaultPackages above.
              # BUT leaving this comment in place to revisit once I understand the environment implications more.
              # TODO savil. Revisit.
              buildInputs = [
                  {{- range .DevPackages}}
                    # pkgs.{{.}}
                  {{end -}}
              ];
            };
        }
        );
}
