name: cli-release
# Releases the Devbox CLI

concurrency: cli-release

on:
  # Build/Release on demand
  workflow_dispatch:
    inputs:
      is_prerelease:
        description: "Pre-release?"
        required: false
        default: false
        type: boolean
  schedule:
    - cron: "45 8 * * 4" # Weekly pre-release on Thursdays.
  push:
    tags:
      - "*" # Tags that trigger a new release version

permissions:
  contents: write
  pull-requests: read

jobs:
  tests:
    uses: ./.github/workflows/cli-tests.yaml

  prerelease:
    runs-on: ubuntu-latest
    environment: release
    needs: tests
    if: ${{ inputs.is_prerelease || github.event.schedule }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Needed by goreleaser to browse history.
      - name: Set up go
        uses: actions/setup-go@v3
        with:
          go-version-file: ./go.mod
          cache: true
      - name: Build snapshot with goreleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist --skip-publish --skip-announce --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TELEMETRY_KEY: ${{ secrets.TELEMETRY_KEY }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      - name: Determine snapshot tag
        run: |
          TAG=$(ls dist/*_linux_386.tar.gz | cut -d '_' -f 2 | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+-dev')
          echo "release_tag=$TAG" >> $GITHUB_ENV
      - name: Publish snapshot release to GitHub
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          fail_on_unmatched_files: true
          tag_name: ${{ env.release_tag }}
          files: |
            dist/checksums.txt
            dist/*.tar.gz
  release:
    runs-on: ubuntu-latest
    environment: release
    needs: tests
    # Only release when there's a tag for the release.
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Needed by goreleaser to browse history.
      - name: Set up go
        uses: actions/setup-go@v3
        with:
          go-version-file: ./go.mod
          cache: false
      - name: Release with goreleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          DISCORD_WEBHOOK_ID: ${{ secrets.DISCORD_WEBHOOK_ID }}
          DISCORD_WEBHOOK_TOKEN: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TELEMETRY_KEY: ${{ secrets.TELEMETRY_KEY }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
