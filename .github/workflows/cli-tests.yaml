name: cli-tests
# Runs the Devbox CLI tests

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  push:
    branches-ignore:
      - main
  workflow_call:
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read

env:
  HOMEBREW_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
  HOMEBREW_NO_ANALYTICS: 1
  HOMEBREW_NO_AUTO_UPDATE: 1
  HOMEBREW_NO_EMOJI: 1
  HOMEBREW_NO_ENV_HINTS: 1
  HOMEBREW_NO_INSTALL_CLEANUP: 1

jobs:
  golangci-lint:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-12]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: ./go.mod
          cache: false # use golangci cache instead
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3.2.0
        with:
          args: "--out-${NO_FUTURE}format colored-line-number --timeout=10m"

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-12]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: ./go.mod
          cache: true
      - name: Build devbox
        run: go install ./cmd/devbox
      - name: Install additional shells (dash, zsh)
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install dash zsh
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew update
            brew install dash zsh
          fi
      - name: Install Nix
        run: |
          sh <(curl -L https://nixos.org/nix/install) --no-modify-profile --daemon --daemon-user-count 1
          . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
          nix-build '<nixpkgs>' -A stdenv -A bash -A hello
          echo "__ETC_PROFILE_NIX_SOURCED=1" >> $GITHUB_ENV
          echo "NIX_PROFILES=$NIX_PROFILES" >> $GITHUB_ENV
          echo "NIX_SSL_CERT_FILE=$NIX_SSL_CERT_FILE" >> $GITHUB_ENV
          echo "PATH=$PATH" >> $GITHUB_ENV
      - name: Run tests
        run: go test -race -cover ./...

  auto-nix-install: # ensure Devbox installs nix and works properly after installation.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: ./go.mod
          cache: true
      - name: Build devbox
        run: go install ./cmd/devbox
      - name: Install nix and devbox packages
        run: |
          NIX_INSTALLER_NO_CHANNEL_ADD=1
          devbox shell -- echo "Installing packages..."
