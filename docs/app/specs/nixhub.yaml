openapi: 3.0.0
info:
  title: Nixhub API
  version: 2.0.0
  description: API for searching and resolving package dependencies
servers:
  - url: https://search.devbox.sh/v2
paths:
  /pkg:
    get:
      summary: Get a Package
      description: >
        Get information about a specific package in Nixpkgs. This endpoint returns a JSON object that contains information about the package, including a list of releases, platforms, and outputs. 

        You should use this endpoint if you know the name of the package you want to look up. If you need to search for packages, use `/v2/search`. If you only need the latest version of a package, use `/v2/resolve`.
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PackageResponse"
        "404":
          description: Not Found
        "400":
          description: "Bad Request: empty package name (set a ?name=&ltpkg&gt query parameter)"
      parameters:
        - name: name
          in: query
          required: true
          description: The name of the package you want to look up. Must be a valid Nixpkgs package name.
          schema:
            type: string
  /search:
    get:
      summary: Search Packages
      description: > 
        Search Packages. This endpoint allows you to search for packages in the Nixpkgs repository using a search query. 
        The response includes a list of package names along with their description. To get available versions and installables for a package, you can use this name with the `/v2/pkg` endpoint. 
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResponse"
        "404":
          description: Not Found
        "400":
          description: "Bad Request: empty search query (set a ?q=<query> query parameter)"
      parameters:
        - name: q
          in: query
          required: true
          description: Search query.
          schema:
            type: string
  /resolve:
    get:
      summary: Resolve a Package Version
      description: > 
       Resolve a Package Version. This endpoint resolves a package name + version string to the latest version of the package available in the Nixpkg repository. 
       The response includes the Flake installable information for the package on each supported platform.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResolveResponse"
        "404":
          description: Not Found
        "400":
          description: "400 Bad Request: empty name (set a ?name=<value> query parameter)"
      parameters:
        - name: name
          in: query
          required: true
          description: The name of the package you want to resolve. Must be a valid Nixpkgs package name.
          schema:
            type: string
        - name: version
          description: The version string of the package you want to resolve.
          in: query
          required: true
          schema:
            type: string
components:
  schemas:
    PackageResponse:
      type: object
      description: An JSON object representing a Nixpkgs package. This is returned by the `/v2/pkg` endpoint
      properties:
        name:
          type: string
          description: The name of the package in Nixhub/Devbox
        summary:
          type: string
          description: A short description of the package
        homepage_url:
          type: string
          description: The URL to the package's project homepage
        license:
          type: string
          description: The software license of the package
        releases:
          type: array
          description: A list of Releases for the package.
          items:
            $ref: "#/components/schemas/Release"
    Release:
      type: object
      description: A specific release (version) of a package in Nixpkg.
      properties:
        version:
          type: string
          description: The version string of the release. This string, combined with a package name, points to a specific version of a package
        last_updated:
          type: string
          description: The last time this release was updated in Nixpkg.
        platforms:
          type: array
          description: A list of platforms this release is available on.
          items:
            $ref: "#/components/schemas/Platform"
        platforms_summary:
          type: string
          description: A summary string that represents the platforms the release can be installed on.
        outputs_summary:
          type: string
          description: A summary string of the outputs (e.g., `out`, `lib`, `dev`) that are available for the release
    Platform:
      type: object
      properties:
        arch:
          type: string
          description: The chip architecture of the platform. This will be one of `arm64` or `x86-64`.
        os:
          type: string
          description: The operating system of the platform. This will be one of `macOS` or `Linux`.
        systems:
          type: string
          description: The full Nix compatible name of the system. This will be one of `aarch64-darwin`, `aarch64-linux`, `x86_64-darwin`, or `x86_64-linux`.
        attribute_path:
          type: string
          description: The attribute path to the package in the Nixpkgs. This can be used to install the package with Nix or Devbox.
        commit_hash:
          type: string
          description: The hash of the Nixpkgs commit that this package was last updated in.
        date:
          type: string
          description: The date this package was last updated in Nixpkgs.
        outputs:
          type: array
          description: A list of Outputs (e.g., `out`, `lib`, `dev`) that are available for the package on this platform.
          items:
            $ref: "#/components/schemas/Output"
    Output:
      type: object
      description: '''
        A single output of a package release. All packages include a single default output (usually out) that includes the packages binaries. 
        Other files, such as libraries or development headers, are available as additional outputs.
        '''
      properties:
        name:
          type: string
          description: The name of the output (e.g., `out`, `lib`, `dev`)
        path:
          type: string
          description: The unique path to the output in the Nix store.
        default:
          type: boolean
          description: Whether this output is the default output for the package
        nar:
          type: string
          description: The path to the packages NAR (Nix Archive) file. This file contains the package's build artifacts.

    SearchResponse:
      type: object
      description: An object representing the results of a search query. This is returned by the `/v2/search` endpoint
      properties:
        query:
          type: string
          description: The search query sent to the `/v2/search` endpoint
        total_results:
          type: integer
          description: The total number of results for the search query
        results:
          type: array
          description: A list of SearchResults that match the query. This array will be empty if no results were found.
          items:
            $ref: "#/components/schemas/SearchResult"
    SearchResult:
      type: object
      description: A single search result that matches a search query.
      properties:
        name:
          type: string
          description: The name of the package that matched the search query
        summary:
          type: string
          description: A short description of the package
        last_updated:
          type: string
          description: The last time this package was updated in the Nixpkgs repo
    Package:
      type: object
      properties:
        flake_installable:
          description: The information needed to install this package as a flake reference.
          type: object
          properties:
            ref:
              type: object
              description: The full Nix reference to the flake that contains this package.
              properties:
                type:
                  type: string
                  description: The type of flake reference. Usually this will be `github`.
                owner:
                  type: string
                  description: The owner of the repository that contains the flake. Usually `NixOS`.
                repo:
                  type: string
                  description: the repository that contains the flake. Usually `nixpkgs`
                rev:
                  type: string
                  description: The Git revision of the flake. This is usually a commit hash.
            attr_path:
              type: string
              description: The attribute path to the package in the flake. This can be used to install the package with Nix or Devbox.
        last_updated:
          type: string
          description: The last time this package was updated in the Nixpkgs repo
        outputs:
          type: array
          description: A list of Outputs (e.g., `out`, `lib`, `dev`) that are available for the package on this platform.
          items:
            $ref: "#/components/schemas/Output"
    ResolveResponse:
      type: object
      description: An object representing the result of a package resolution. This is returned by the `/v2/resolve` endpoint
      properties:
        name:
          type: string
          description: The name of the package that was resolved.
        version:
          type: string
          description: The latest version the package that matches the version string provided in the request.
        summary:
          type: string
          description: A short description of the package
        systems:
          type: object
          description: A list of systems that the package can be installed on, along with the details of the Package on that system. 
          properties:
            aarch64-darwin:
              $ref: "#/components/schemas/Package"
            aarch64-linux:
              $ref: "#/components/schemas/Package"
            x86_64-darwin:
              $ref: "#/components/schemas/Package"
            x86_64-linux:
              $ref: "#/components/schemas/Package"